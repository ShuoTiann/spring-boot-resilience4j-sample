plugins {
    id 'org.springframework.boot' version '2.5.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    maven {
        url "https://maven.aliyun.com/nexus/content/repositories/central/"
    }
    mavenCentral()
}

ext {
    set('springCloudVersion', "2021.0.3")
    set('resilience4jVersion', "1.7.1")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    // resilience4j
    implementation("io.github.resilience4j:resilience4j-spring-boot2:${resilience4jVersion}")
    implementation("io.github.resilience4j:resilience4j-all:${resilience4jVersion}")
    // Optional, only required when you want to use the Decorators class
    implementation("io.github.resilience4j:resilience4j-reactor:${resilience4jVersion}")

    // For chaos testing
    implementation 'de.codecentric:chaos-monkey-spring-boot:2.6.1'
    // For micrometer, Prometheus
    implementation 'io.micrometer:micrometer-registry-prometheus'


    // This is statsd dependency
    implementation 'io.micrometer:micrometer-registry-statsd:1.6.4'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
}

tasks.named('test') {
    useJUnitPlatform()
}
